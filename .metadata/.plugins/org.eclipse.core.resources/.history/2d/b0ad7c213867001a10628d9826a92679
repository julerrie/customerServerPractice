package com.example.demo;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.ObjectMapper;

@RestController
public class CustomerController {
	private final CustomerRepository repository;
	
	public CustomerController(CustomerRepository repository) {
		this.repository = repository;
	}
	
	@GetMapping("/getDataFromScheduledDate")
	ReturnClass getDataFromDate(@RequestParam String date) {
		ReturnClass newReturn = new ReturnClass();
		newReturn.setMessage("");
		newReturn.setStatus("");
		newReturn.setResults(repository.findBysScheduledDate(date));
		return newReturn;
	}

	@GetMapping("/test")
	List<Customer> returnCustmer() throws IOException {
		List <Customer> newCustomers = new ArrayList<Customer>();
		try {
			ObjectMapper objectMapper = new ObjectMapper();
			InputStream inputStream =  this.getClass().getResourceAsStream("/customer.json");
			newCustomers = Arrays.asList(objectMapper.readValue(inputStream, Customer[].class));
			return newCustomers;
		} catch (IOException e) {
	        e.printStackTrace();
	        return newCustomers;
		}
	}
	
	@PostMapping("/updateCustomer")
	String updateCustomer(@RequestBody Customer updatedCustomer) {
		String scheduleDate = updatedCustomer.getS_ScheduledDate();
		String gouban = updatedCustomer.getS_GouBan();
		String gassecchi = updatedCustomer.getS_GasSecchi();
		
		Customer oldCustomer = repository.findBysScheduledDateAndsGasSecchiAndsGouBan(scheduleDate, gassecchi, gouban);
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_UseCd(updatedCustomer.getS_UseCd());
        oldCustomer.setS_MichiCd(updatedCustomer.getS_MichiCd());
        oldCustomer.setS_PrevChr(updatedCustomer.getS_PrevChr());
        oldCustomer.setS_LockNo(updatedCustomer.getS_LockNo());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        oldCustomer.setS_HohoCd(updatedCustomer.getS_HohoCd());
        // 暗証番号（Null許容）
        s_LockNo = customer.lockNo ?? ""
        
        // 暗証番号後（Null許容）
        s_AftrChr = customer.afterLockNoCha ?? ""
        
        // マンションメモ
        s_Man = customer.manMemo ?? ""
        
        // 今回ガスメータ指示数（Null許容）
        s_Shiji = customer.s_Shiji ?? ""
        
        // 今回ガス使用量（Null許容）
        s_ShiyouRyo = customer.s_ShiyouRyo ?? ""
        
        // 取外指示数（Null許容）
        s_HazusiSijisu = customer.s_HazusiSijisu ?? ""
        
        // 取付指示数（Null許容）
        s_TsukeSijisu = customer.s_TsukeSijisu ?? ""
        
        // 登録内容ミクス（５）（検針時留意情報）（Null許容）
        s_TorokuMix5 = customer.s_TorokuMix5 ?? ""
        
        ///　特殊情報　２(異動)（Null許容）
        s_Tokuryo2 = customer.s_Tokuryo2 ?? ""
        ///　特殊情報　３(回帰)（Null許容）
        s_Tokuryo3 = customer.s_Tokuryo3 ?? ""
        ///　特殊情報　4(連続０確認)
        s_Tokuryo4 = customer.s_Tokuryo4 ?? ""
        /// 特殊情報　６（メータ取替）（Null許容）
        s_Tokuryo6 = customer.s_Tokuryo6 ?? ""
        ///　特殊情報　7(氏名無)
        s_Tokuryo7 = customer.s_Tokuryo7 ?? ""
        ///屋内犬数
        s_Idog = customer.s_Idog ?? ""
        ///屋外犬数
        s_Odog = customer.s_Odog ?? ""
        ///屋内犬分類コード
        s_IDogCd = customer.s_IDogCd ?? ""
        ///屋外犬分類コード
        s_ODogCd = customer.s_ODogCd ?? ""
        
        /// 検針実施状況コード（Null許容）
        s_JokyoCd = customer.s_JokyoCd ?? ""
        
        ///　接客分類コード08（保留）
        s_KyakuBunCd08 = customer.s_KyakuBunCd08 ?? ""
        
        ///　接客手入力内容08（保留）
        s_KyakuNaiyo08 = customer.s_KyakuNaiyo08 ?? ""
        
        // 検針完了コード
        s_CompCd = customer.s_CompCd
        
        // （Null許容）検針可能時間（開始）
        s_PossStart = customer.houseModel.contactableTimeStart ?? ""
        
        // （Null許容）検針可能時間（終了）
        s_PossEnd = customer.houseModel.contactableTimeEnd ?? ""
        
        // （Null許容）検針可能曜日
        s_PossWeek = customer.s_PossWeek ?? ""

        // 位置CD
        s_IchiCd = customer.s_IchiCd
        
        //保留コード
        s_KyakuBunCd08 = customer.s_KyakuBunCd08 ?? ""
        //保留内容
        s_KyakuNaiyo08 = customer.s_KyakuNaiyo08 ?? ""
        
        // 試験針
        s_Sikenbari = customer.s_Sikenbari ?? ""
        
        // 今回連続０事由
        s_RenzokuZeroJiyu = customer.s_RenzokuZeroJiyu ?? ""
        s_KenSeq = customer.s_KenSeq ?? ""
	}
	
}